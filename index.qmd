---
title: "1인 평균 국내여행 지출액 비교: COVID-19 기간을 구분으로"
author: "웰컴 투 코리아😎(박수빈, 문지윤, 유은서, 오현욱)"
date: "2024-07-24"
categories: [bigdata]
---


## 분석 주제: "1인 평균 국내여행 지출액 비교: COVID-19 기간을 구분으로"

- 출처: 문화체육관광부,「국민여행조사」, 2022, 2024.07.19, 국내여행 지출액, [데이터 URL](https://kosis.kr/statHtml/statHtml.do?orgId=113&tblId=DT_113_STBL_1029295&conn_path=I2)

> [info] 참고 사항, [자료설명 추가자료](https://nettle-taxicab-cb0.notion.site/31f221be08f2435ab8a36fb0d76b1187)


> 1. 본 통계 값은 2023년 12월 만 15세 이상 인구수를 기준으로 모수 추정한 결과
>  - 모수추정법 데이터 사용이란?
> </br>
>  통계학의 대전제는 분석 대상 전체(모집단)를 분석하기에는 많은 비용이 발생하므로 부분(표본)을 통해 모집단의 특성을 파악하는 것이다. 모집단의 일부인 표본에 통계 분석 방법을 적용해 모수를 추정하는 방법을 모수 추정이라 한다.

> 2. 본 통계의 '만 15세 이상 전국민'은 2023년 장래인구추계인 45,872,017명을 기준으로 함

> 3. 관광여행과 기타여행 구분
>  - 관광여행: 여행의 주된 목적이 '관광‧휴양'인 경우
>  - 기타여행: 여행의 주된 목적이 '출장·업무', '단순 귀성, 단순 친구·친지 방문'인 경우

> 4. 수록된 숫자는 단위 미만에서 반올림, 각 항목 값의 합이 총계(또는 전체)와 일치하지 않을 수도 있음

> 5. 단위: 십억원


---

- 조사기간 및 조사대상 규모

> 1) COVID-19 이전: 2018년(48,000명), 2019년(50,400명)
> 2) COVID-19 기간: 2020년(50,400명), 2021년(51,600명)
> 3) COVID-19 이후: 2022년(51,600명)

---
## 분석 시작!!

```{python}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
```



## 1. 2022년 데이터 불러오기

- 원본 데이터(excel)상, 1행과 2행 일부가 병합되어 있음.
```{python}
df_22 = pd.read_excel('data/domestic_2022.xlsx')
df_22.head(2)
```

</br>

- 원본 데이터의 2행부터 불러오고자 header = 1로 설정하였음. 
```{python}
df_22 = pd.read_excel('data/domestic_2022.xlsx', header = 1)
df_22
```

***

## 2. 변수 이름 바꿔보기
##### 데이터 변수 확인

```{python}
df_22.columns
```

```{python}
df_22 = df_22.rename(columns = {'통계분류(1)' : 'class1',
                                '통계분류(2)' : 'class2',
                                '국내전체'    : 'dm_total',
                                '국내숙박'    : 'dm_stay',
                                '국내당일'    : 'dm_1day',
                                '관광전체'    : 'tr_total',
                                '관광숙박'    : 'tr_stay',
                                '관광당일'    : 'tr_1day',
                                '기타전체'    : 'ot_total',
                                '기타숙박'    : 'ot_stay',
                                '기타당일'    : 'ot_1day'
                          })
df_22.columns
```

***

## 3. 'class1'의 Nan 값에 class에 맞는 값 부여 & 영문명으로 변경
```{python}

df_22.loc[0, ['class1']] = "category-sum"
df_22.loc[1:2, ['class1']] = "sex"
df_22.loc[3:9, ['class1']] = "age"
df_22.loc[10:16, ['class1']] = "job"
df_22.loc[17:20, ['class1']] = "edu"
df_22.loc[21:23, ['class1']] = "fam"
df_22.loc[24:30, ['class1']] = "income"

df_22.head()
```
</br>

***

## 4. 'class2'도 영문으로 변경
```{python}
df_22.loc[0, ["class2"]] = "sum_22"

#sex
df_22.loc[df_22["class2"] == "남자", "class2"] = "M"
df_22.loc[df_22["class2"] == "여자", "class2"] = "F"

#age
df_22.loc[df_22["class2"] == "15~19세"  , "class2"] = "10s"
df_22.loc[df_22["class2"] == "20대"     , "class2"] = "20s"
df_22.loc[df_22["class2"] == "30대"     , "class2"] = "30s"
df_22.loc[df_22["class2"] == "40대"     , "class2"] = "40s"
df_22.loc[df_22["class2"] == "50대"     , "class2"] = "50s"
df_22.loc[df_22["class2"] == "60대"     , "class2"] = "60s"
df_22.loc[df_22["class2"] == "70세 이상", "class2"] = "70s~"

#job
df_22.loc[df_22["class2"] == "임금봉급근로자"    , "class2"] = "work"
df_22.loc[df_22["class2"] == "고용원있는사업주"  , "class2"] = "co_ceo"
df_22.loc[df_22["class2"] == "고용원없는자영업자", "class2"] = "self-ceo"
df_22.loc[df_22["class2"] == "무급가족 종사자"   , "class2"] = "fam_work"
df_22.loc[df_22["class2"] == "전업주부"          , "class2"] = "house_work"
df_22.loc[df_22["class2"] == "학생"              , "class2"] = "stu"
df_22.loc[df_22["class2"] == "기타"              , "class2"] = "etc"

#edu
df_22.loc[df_22["class2"] == "초졸 이하" , "class2"] = "~prime_edu"
df_22.loc[df_22["class2"] == "중학교"    , "class2"] = "middle_edu"
df_22.loc[df_22["class2"] == "고등학교"  , "class2"] = "high_edu"
df_22.loc[df_22["class2"] == "대학교이상", "class2"] = "univ_edu~"

#fam
df_22.loc[df_22["class2"] == "1인"    , "class2"] = "1p"
df_22.loc[df_22["class2"] == "2인"    , "class2"] = "2p"
df_22.loc[df_22["class2"] == "3인이상", "class2"] = "3p~"

#income
df_22.loc[df_22["class2"] == "100만원 미만"    , "class2"] = "~100"
df_22.loc[df_22["class2"] == "100~200만원 미만", "class2"] = "100~200"
df_22.loc[df_22["class2"] == "200~300만원 미만", "class2"] = "200~300"
df_22.loc[df_22["class2"] == "300~400만원 미만", "class2"] = "300~400"
df_22.loc[df_22["class2"] == "400~500만원 미만", "class2"] = "400~500"
df_22.loc[df_22["class2"] == "500~600만원 미만", "class2"] = "500~600"
df_22.loc[df_22["class2"] == "600만원 이상"    , "class2"] = "600~"

df_22.head()
```

</br>

##### class1과 class2를 index로 설정

```{python}
df_22 = df_22.set_index(['class1', 'class2'])

df_22.head(10)
```

</br>

***

## 5. 분석에 필요한 부분만 추출하기!
- 연도별 1인 평균 지출액을 알고자 성별, 연령과 같은 부분은 빼고 지출액만 선택
- df_22에서 첫번째 행에서 dm_total, tr_total, ot_total 추출
- 1인 평균 지출액을 원 단위로 구하고자 기본 단위인 10억 원을 곱함
- 이를 2023년 장래인구추계인 45,872,017명으로 나눔


```{python}
df_22_sum = df_22.loc["category-sum", ["dm_total", "tr_total", "ot_total"]] * 1000000000 / 45872017
df_22_sum
```


***

</br>

##### 2018~2021 데이터도 동일하게 작업 진행

***

- 2018년
```{python}
df_18 = pd.read_excel('data/domestic_2018.xlsx', header = 1)
df_18 = df_18.rename(columns = {'통계분류(1)' : 'class1',
                                '통계분류(2)' : 'class2',
                                '국내전체'    : 'dm_total',
                                '국내숙박'    : 'dm_stay',
                                '국내당일'    : 'dm_1day',
                                '관광전체'    : 'tr_total',
                                '관광숙박'    : 'tr_stay',
                                '관광당일'    : 'tr_1day',
                                '기타전체'    : 'ot_total',
                                '기타숙박'    : 'ot_stay',
                                '기타당일'    : 'ot_1day'
                          })

df_18.loc[0, ['class1']] = "category-sum"
df_18.loc[1:2, ['class1']] = "sex"
df_18.loc[3:9, ['class1']] = "age"
df_18.loc[10:16, ['class1']] = "job"
df_18.loc[17:20, ['class1']] = "edu"
df_18.loc[21:23, ['class1']] = "fam"
df_18.loc[24:30, ['class1']] = "income"

df_18.loc[0, ["class2"]] = "sum_18"
df_18.loc[df_18["class2"] == "남자", "class2"] = "M"
df_18.loc[df_18["class2"] == "여자", "class2"] = "F"
df_18.loc[df_18["class2"] == "15~19세"  , "class2"] = "10s"
df_18.loc[df_18["class2"] == "20대"     , "class2"] = "20s"
df_18.loc[df_18["class2"] == "30대"     , "class2"] = "30s"
df_18.loc[df_18["class2"] == "40대"     , "class2"] = "40s"
df_18.loc[df_18["class2"] == "50대"     , "class2"] = "50s"
df_18.loc[df_18["class2"] == "60대"     , "class2"] = "60s"
df_18.loc[df_18["class2"] == "70세 이상", "class2"] = "70s~"
df_18.loc[df_18["class2"] == "임금봉급근로자"    , "class2"] = "work"
df_18.loc[df_18["class2"] == "고용원있는사업주"  , "class2"] = "co_ceo"
df_18.loc[df_18["class2"] == "고용원없는자영업자", "class2"] = "self-ceo"
df_18.loc[df_18["class2"] == "무급가족 종사자"   , "class2"] = "fam_work"
df_18.loc[df_18["class2"] == "전업주부"          , "class2"] = "house_work"
df_18.loc[df_18["class2"] == "학생"              , "class2"] = "stu"
df_18.loc[df_18["class2"] == "기타"              , "class2"] = "etc"
df_18.loc[df_18["class2"] == "초졸 이하" , "class2"] = "~prime_edu"
df_18.loc[df_18["class2"] == "중학교"    , "class2"] = "middle_edu"
df_18.loc[df_18["class2"] == "고등학교"  , "class2"] = "high_edu"
df_18.loc[df_18["class2"] == "대학교이상", "class2"] = "univ_edu~"
df_18.loc[df_18["class2"] == "1인"    , "class2"] = "1p"
df_18.loc[df_18["class2"] == "2인"    , "class2"] = "2p"
df_18.loc[df_18["class2"] == "3인이상", "class2"] = "3p~"
df_18.loc[df_18["class2"] == "100만원 미만"    , "class2"] = "~100"
df_18.loc[df_18["class2"] == "100~200만원 미만", "class2"] = "100~200"
df_18.loc[df_18["class2"] == "200~300만원 미만", "class2"] = "200~300"
df_18.loc[df_18["class2"] == "300~400만원 미만", "class2"] = "300~400"
df_18.loc[df_18["class2"] == "400~500만원 미만", "class2"] = "400~500"
df_18.loc[df_18["class2"] == "500~600만원 미만", "class2"] = "500~600"
df_18.loc[df_18["class2"] == "600만원 이상"    , "class2"] = "600~"

```



- class1과 class2를 index로 설정
```{python}
df_18 = df_18.set_index(['class1', 'class2'])
```

</br>

- 분석에 필요한 부분만 추출
```{python}
df_18_sum = df_18.loc["category-sum", ["dm_total", "tr_total", "ot_total"]] * 1000000000 / 45872017
df_18_sum
```

</br>

- 2019년
```{python}
df_19 = pd.read_excel('data/domestic_2019.xlsx', header = 1)
df_19 = df_19.rename(columns = {'통계분류(1)' : 'class1',
                                '통계분류(2)' : 'class2',
                                '국내전체'    : 'dm_total',
                                '국내숙박'    : 'dm_stay',
                                '국내당일'    : 'dm_1day',
                                '관광전체'    : 'tr_total',
                                '관광숙박'    : 'tr_stay',
                                '관광당일'    : 'tr_1day',
                                '기타전체'    : 'ot_total',
                                '기타숙박'    : 'ot_stay',
                                '기타당일'    : 'ot_1day'
                          })

df_19.loc[0,     ['class1']] = "category-sum"
df_19.loc[1:2,   ['class1']] = "sex"
df_19.loc[3:9,   ['class1']] = "age"
df_19.loc[10:16, ['class1']] = "job"
df_19.loc[17:20, ['class1']] = "edu"
df_19.loc[21:23, ['class1']] = "fam"
df_19.loc[24:30, ['class1']] = "income"

df_19.loc[0, ["class2"]] = "sum_19"
df_19.loc[df_19["class2"] == "남자", "class2"] = "M"
df_19.loc[df_19["class2"] == "여자", "class2"] = "F"
df_19.loc[df_19["class2"] == "15~19세"  , "class2"] = "10s"
df_19.loc[df_19["class2"] == "20대"     , "class2"] = "20s"
df_19.loc[df_19["class2"] == "30대"     , "class2"] = "30s"
df_19.loc[df_19["class2"] == "40대"     , "class2"] = "40s"
df_19.loc[df_19["class2"] == "50대"     , "class2"] = "50s"
df_19.loc[df_19["class2"] == "60대"     , "class2"] = "60s"
df_19.loc[df_19["class2"] == "70세 이상", "class2"] = "70s~"
df_19.loc[df_19["class2"] == "임금봉급근로자"    , "class2"] = "work"
df_19.loc[df_19["class2"] == "고용원있는사업주"  , "class2"] = "co_ceo"
df_19.loc[df_19["class2"] == "고용원없는자영업자", "class2"] = "self-ceo"
df_19.loc[df_19["class2"] == "무급가족 종사자"   , "class2"] = "fam_work"
df_19.loc[df_19["class2"] == "전업주부"          , "class2"] = "house_work"
df_19.loc[df_19["class2"] == "학생"              , "class2"] = "stu"
df_19.loc[df_19["class2"] == "기타"              , "class2"] = "etc"
df_19.loc[df_19["class2"] == "초졸 이하" , "class2"] = "~prime_edu"
df_19.loc[df_19["class2"] == "중학교"    , "class2"] = "middle_edu"
df_19.loc[df_19["class2"] == "고등학교"  , "class2"] = "high_edu"
df_19.loc[df_19["class2"] == "대학교이상", "class2"] = "univ_edu~"
df_19.loc[df_19["class2"] == "1인"    , "class2"] = "1p"
df_19.loc[df_19["class2"] == "2인"    , "class2"] = "2p"
df_19.loc[df_19["class2"] == "3인이상", "class2"] = "3p~"
df_19.loc[df_19["class2"] == "100만원 미만"    , "class2"] = "~100"
df_19.loc[df_19["class2"] == "100~200만원 미만", "class2"] = "100~200"
df_19.loc[df_19["class2"] == "200~300만원 미만", "class2"] = "200~300"
df_19.loc[df_19["class2"] == "300~400만원 미만", "class2"] = "300~400"
df_19.loc[df_19["class2"] == "400~500만원 미만", "class2"] = "400~500"
df_19.loc[df_19["class2"] == "500~600만원 미만", "class2"] = "500~600"
df_19.loc[df_19["class2"] == "600만원 이상"    , "class2"] = "600~"
```



-  class1과 class2를 index로 설정
```{python}
df_19 = df_19.set_index(['class1', 'class2'])
```



- 분석에 필요한 부분만 추출
```{python}
df_19_sum = df_19.loc["category-sum", ["dm_total", "tr_total", "ot_total"]] * 1000000000 / 45872017
df_19_sum
```

</br>

- 2020년

```{python}
df_20 = pd.read_excel('data/domestic_2020.xlsx', header = 1)
df_20 = df_20.rename(columns = {'통계분류(1)' : 'class1',
                                '통계분류(2)' : 'class2',
                                '국내전체'    : 'dm_total',
                                '국내숙박'    : 'dm_stay',
                                '국내당일'    : 'dm_1day',
                                '관광전체'    : 'tr_total',
                                '관광숙박'    : 'tr_stay',
                                '관광당일'    : 'tr_1day',
                                '기타전체'    : 'ot_total',
                                '기타숙박'    : 'ot_stay',
                                '기타당일'    : 'ot_1day'
                          })

df_20.loc[0,     ['class1']] = "category-sum"
df_20.loc[1:2,   ['class1']] = "sex"
df_20.loc[3:9,   ['class1']] = "age"
df_20.loc[10:16, ['class1']] = "job"
df_20.loc[17:20, ['class1']] = "edu"
df_20.loc[21:23, ['class1']] = "fam"
df_20.loc[24:30, ['class1']] = "income"

df_20.loc[0, ["class2"]] = "sum_20"
df_20.loc[df_20["class2"] == "남자", "class2"] = "M"
df_20.loc[df_20["class2"] == "여자", "class2"] = "F"
df_20.loc[df_20["class2"] == "15~19세"  , "class2"] = "10s"
df_20.loc[df_20["class2"] == "20대"     , "class2"] = "20s"
df_20.loc[df_20["class2"] == "30대"     , "class2"] = "30s"
df_20.loc[df_20["class2"] == "40대"     , "class2"] = "40s"
df_20.loc[df_20["class2"] == "50대"     , "class2"] = "50s"
df_20.loc[df_20["class2"] == "60대"     , "class2"] = "60s"
df_20.loc[df_20["class2"] == "70세 이상", "class2"] = "70s~"
df_20.loc[df_20["class2"] == "임금봉급근로자"    , "class2"] = "work"
df_20.loc[df_20["class2"] == "고용원있는사업주"  , "class2"] = "co_ceo"
df_20.loc[df_20["class2"] == "고용원없는자영업자", "class2"] = "self-ceo"
df_20.loc[df_20["class2"] == "무급가족 종사자"   , "class2"] = "fam_work"
df_20.loc[df_20["class2"] == "전업주부"          , "class2"] = "house_work"
df_20.loc[df_20["class2"] == "학생"              , "class2"] = "stu"
df_20.loc[df_20["class2"] == "기타"              , "class2"] = "etc"
df_20.loc[df_20["class2"] == "초졸 이하" , "class2"] = "~prime_edu"
df_20.loc[df_20["class2"] == "중학교"    , "class2"] = "middle_edu"
df_20.loc[df_20["class2"] == "고등학교"  , "class2"] = "high_edu"
df_20.loc[df_20["class2"] == "대학교이상", "class2"] = "univ_edu~"
df_20.loc[df_20["class2"] == "1인"    , "class2"] = "1p"
df_20.loc[df_20["class2"] == "2인"    , "class2"] = "2p"
df_20.loc[df_20["class2"] == "3인이상", "class2"] = "3p~"
df_20.loc[df_20["class2"] == "100만원 미만"    , "class2"] = "~100"
df_20.loc[df_20["class2"] == "100~200만원 미만", "class2"] = "100~200"
df_20.loc[df_20["class2"] == "200~300만원 미만", "class2"] = "200~300"
df_20.loc[df_20["class2"] == "300~400만원 미만", "class2"] = "300~400"
df_20.loc[df_20["class2"] == "400~500만원 미만", "class2"] = "400~500"
df_20.loc[df_20["class2"] == "500~600만원 미만", "class2"] = "500~600"
df_20.loc[df_20["class2"] == "600만원 이상"    , "class2"] = "600~"

```


- class1과 class2를 index로 설정
```{python}
df_20 = df_20.set_index(['class1', 'class2'])
```



- 분석에 필요한 부분만 추출

```{python}
df_20_sum = df_20.loc["category-sum", ["dm_total", "tr_total", "ot_total"]] * 1000000000 / 45872017
df_20_sum
```

</br>

- 2021년

```{python}
df_21 = pd.read_excel('data/domestic_2021.xlsx', header = 1)
df_21 = df_21.rename(columns = {'통계분류(1)' : 'class1',
                                '통계분류(2)' : 'class2',
                                '국내전체'    : 'dm_total',
                                '국내숙박'    : 'dm_stay',
                                '국내당일'    : 'dm_1day',
                                '관광전체'    : 'tr_total',
                                '관광숙박'    : 'tr_stay',
                                '관광당일'    : 'tr_1day',
                                '기타전체'    : 'ot_total',
                                '기타숙박'    : 'ot_stay',
                                '기타당일'    : 'ot_1day'
                          })

df_21.loc[0, ['class1']] = "category-sum"
df_21.loc[1:2, ['class1']] = "sex"
df_21.loc[3:9, ['class1']] = "age"
df_21.loc[10:16, ['class1']] = "job"
df_21.loc[17:20, ['class1']] = "edu"
df_21.loc[21:23, ['class1']] = "fam"
df_21.loc[24:30, ['class1']] = "income"

df_21.loc[0, ["class2"]] = "sum_21"
df_21.loc[df_21["class2"] == "남자", "class2"] = "M"
df_21.loc[df_21["class2"] == "여자", "class2"] = "F"
df_21.loc[df_21["class2"] == "15~19세"  , "class2"] = "10s"
df_21.loc[df_21["class2"] == "20대"     , "class2"] = "20s"
df_21.loc[df_21["class2"] == "30대"     , "class2"] = "30s"
df_21.loc[df_21["class2"] == "40대"     , "class2"] = "40s"
df_21.loc[df_21["class2"] == "50대"     , "class2"] = "50s"
df_21.loc[df_21["class2"] == "60대"     , "class2"] = "60s"
df_21.loc[df_21["class2"] == "70세 이상", "class2"] = "70s~"
df_21.loc[df_21["class2"] == "임금봉급근로자"    , "class2"] = "work"
df_21.loc[df_21["class2"] == "고용원있는사업주"  , "class2"] = "co_ceo"
df_21.loc[df_21["class2"] == "고용원없는자영업자", "class2"] = "self-ceo"
df_21.loc[df_21["class2"] == "무급가족 종사자"   , "class2"] = "fam_work"
df_21.loc[df_21["class2"] == "전업주부"          , "class2"] = "house_work"
df_21.loc[df_21["class2"] == "학생"              , "class2"] = "stu"
df_21.loc[df_21["class2"] == "기타"              , "class2"] = "etc"
df_21.loc[df_21["class2"] == "초졸 이하" , "class2"] = "~prime_edu"
df_21.loc[df_21["class2"] == "중학교"    , "class2"] = "middle_edu"
df_21.loc[df_21["class2"] == "고등학교"  , "class2"] = "high_edu"
df_21.loc[df_21["class2"] == "대학교이상", "class2"] = "univ_edu~"
df_21.loc[df_21["class2"] == "1인"    , "class2"] = "1p"
df_21.loc[df_21["class2"] == "2인"    , "class2"] = "2p"
df_21.loc[df_21["class2"] == "3인이상", "class2"] = "3p~"
df_21.loc[df_21["class2"] == "100만원 미만"    , "class2"] = "~100"
df_21.loc[df_21["class2"] == "100~200만원 미만", "class2"] = "100~200"
df_21.loc[df_21["class2"] == "200~300만원 미만", "class2"] = "200~300"
df_21.loc[df_21["class2"] == "300~400만원 미만", "class2"] = "300~400"
df_21.loc[df_21["class2"] == "400~500만원 미만", "class2"] = "400~500"
df_21.loc[df_21["class2"] == "500~600만원 미만", "class2"] = "500~600"
df_21.loc[df_21["class2"] == "600만원 이상"    , "class2"] = "600~"

```


- class1과 class2를 index로 설정
```{python}

df_21 = df_21.set_index(['class1', 'class2'])

```

- 분석에 필요한 부분만 추출
```{python}
df_21_sum = df_21.loc["category-sum", ["dm_total", "tr_total", "ot_total"]] * 1000000000 / 45872017
df_21_sum
```

***

</br>

#### 전처리 작업 끝
```{python}
df_18_sum
```

</br>

```{python}
df_19_sum
```

</br>

```{python}
df_20_sum
```

</br>

```{python}
df_21_sum
```

</br>

```{python}
df_22_sum
```

---

</br>


#### 연도별 비교 그래프 만들기

</br>

- 비교가 쉽도록 데이터 프레임 생성
```{python}
ex_df = pd.concat([df_18_sum,df_19_sum,df_20_sum,df_21_sum,df_22_sum])
ex_df
```

</br>

```{python}
import seaborn as sns
sns.lineplot(data = ex_df, x = ex_df.index, y = 'dm_total', marker = 'o', label = 'dm_total')
sns.lineplot(data = ex_df, x = ex_df.index, y = 'tr_total', marker = 'o', label = 'tr_total')
sns.lineplot(data = ex_df, x = ex_df.index, y = 'ot_total', marker = 'o', label = 'ot_total')


plt.show()

```

</br>

#### 분석 기간별로 데이터 그룹화

</br>

- bf_covid(코로나 이전)
```{python}
bf_covid = pd.concat([df_18_sum, df_19_sum])
bf_covid = ex_df.loc[['sum_18','sum_19']]
bf_covid
```

</br>

- during covid(코로나 기간)
```{python}
du_covid = pd.concat([df_20_sum, df_21_sum])
du_covid = ex_df.loc[['sum_20','sum_21']]
du_covid
```

</br>

- after covid(코로나 이후)
```{python}
af_covid = df_22_sum
af_covid
af_covid
```


</br>

---
- 한글 안깨지게 폰트 업데이트 설정(교재 p.203)

```{python}
plt.rcParams.update({'font.family' : 'Malgun Gothic'})
```
---

</br>

## 그래프를 만들어보자!


```{python}
import seaborn as sns
```

</br>

### Covid-19 이전(2018~2019년) 1인 평균 여행 지출액

- bf_covid를 변환해서 18년도와 19년도 평균을 파생변수'mean_bf'로 추가
```{python}
bf_covid
```
</br>
```{python}
bf = bf_covid.transpose()
bf
```

- 파생변수 'mean_bf' 추가
```{python}
bf['mean_bf'] = (bf['sum_18'] + bf['sum_19'])/2
bf
```

</br>

- 이를 다시 변환하여 bf_covid_sum으로 저장
```{python}
bf_covid_sum = bf.transpose()
bf_covid_sum
```

</br>

- bf_covid_sum에서 마지막 행인 'mean_bf'부분만 선택, 이를 b에 할당
```{python}
b = (bf_covid_sum.loc['mean_bf', :])
b
```

</br>

- 그래프 만들기
```{python}
sns.barplot(data = b)
plt.title('Covid-19 이전(2018~2019년) 1인 평균 여행 지출액')
plt.ylabel('1인 평균 지출액')
plt.show()
plt.clf()
```

</br>

### Covid-19 기간(2020~2021년) 1인 평균 여행 지출액


```{python}
# du_covid를 변환해서 20년도와 21년도 평균을 'mean_du'로 추가
du = du_covid.transpose()
du['mean_du'] = (du['sum_20'] + du['sum_21'])/2

# 이를 다시 변환하여 du_covid_sum으로 저장
du_covid_sum = du.transpose()

# du_covid_sum에서 'mean_du'부분만 선택, 이를 d에 할당
d = (du_covid_sum.loc['mean_du', :])
d
```

</br>

- 그래프 만들기
```{python}
sns.barplot(data = d)
plt.title('Covid-19 기간(2020~2021년) 1인 평균 여행 지출액')
plt.ylabel('1인 평균 지출액')
plt.show()
plt.clf()
```

</br>

### Covid-19 이후(2022년) 1인 평균 여행 지출액

```{python}
a = af_covid
a
```

</br>

- 그래프 만들기
```{python}
sns.barplot(data = a)
plt.title('Covid-19 이후(2022년) 1인 평균 여행 지출액')
plt.ylabel('1인 평균 지출액')
plt.show()
plt.clf()
```

</br>

---

## 국내전체 / 관광전체 / 기타전체 별 그래프 만들기

- 연도별 dm_total, tr_total, ot_total을 담은 ex_df2 생성


```{python}
df_18.loc['category-sum', ['dm_total','tr_total','ot_total']]
```

</br>

```{python}
ex_df2 = pd.concat([
                    df_18.loc['category-sum', ['dm_total','tr_total','ot_total']],
                    df_19.loc['category-sum', ['dm_total','tr_total','ot_total']],
                    df_20.loc['category-sum', ['dm_total','tr_total','ot_total']],
                    df_21.loc['category-sum', ['dm_total','tr_total','ot_total']],
                    df_22.loc['category-sum', ['dm_total','tr_total','ot_total']]
                   ])
                   
ex_df2
```

</br>

#### 년도별 dm_total
```{python}
plt.figure(figsize=(10, 6))
sns.barplot(data = ex_df2, x = 'dm_total', y = 'class2', palette = 'viridis')
plt.xlabel('Class2')
plt.ylabel('DM Total')
plt.title('DM Total by Class2')
plt.show()
plt.clf()
```

</br>

- 증감률(%) = (변화량 / 초기값) x 100
```{python}
#ex_df2['증감률'] = (b년도-a년도)/a년도 X 100

dm_18 = ex_df2.loc['sum_18', 'dm_total'] #18년도 dm_total
dm_19 = ex_df2.loc['sum_19', 'dm_total'] #19년도 dm_total
dm_20 = ex_df2.loc['sum_20', 'dm_total'] #20년도 dm_total
dm_21 = ex_df2.loc['sum_21', 'dm_total'] #21년도 dm_total
dm_22 = ex_df2.loc['sum_22', 'dm_total'] #22년도 dm_total
```

</br>

- 18년도 -> 19년도: `2.4%` 증가
```{python}
((dm_19 - dm_18) / dm_18) * 100 
```


- 19년도 -> 20년도: `-45.4%` 감소
```{python}
((dm_20 - dm_19) / dm_19) * 100 
```


- 20년도 -> 21년도: `7.3%` 증가
```{python}
((dm_21 - dm_20) / dm_20) * 100
```


- 21년도 -> 22년도: `33.2%` 증가
```{python}
((dm_22 - dm_21) / dm_21) * 100 
```

</br>

***

#### 년도별 tr_total
```{python}
plt.figure(figsize=(10, 6))
sns.barplot(data = ex_df2, x = 'tr_total', y = 'class2', palette = 'viridis')
plt.xlabel('Class2')
plt.ylabel('TR Total')
plt.title('TR Total by Class2')
plt.show()
plt.clf()
```
***

</br>

- 증감률(%) = (변화량 / 초기값) x 100
```{python}
tr_18 = ex_df2.loc['sum_18', 'tr_total'] #18년도 tr_total
tr_19 = ex_df2.loc['sum_19', 'tr_total'] #19년도 tr_total
tr_20 = ex_df2.loc['sum_20', 'tr_total'] #20년도 tr_total
tr_21 = ex_df2.loc['sum_21', 'tr_total'] #21년도 tr_total
tr_22 = ex_df2.loc['sum_22', 'tr_total'] #22년도 tr_total
```

</br>

- 18년도 -> 19년도: `8.0%` 증가
```{python}
((tr_19 - tr_18) / tr_18) * 100
```

- 19년도 -> 20년도: `-46.8%` 감소
```{python}
((tr_20 - tr_19) / tr_19) * 100
```


- 20년도 -> 21년도: `14.11%` 증가
```{python}
((tr_21 - tr_20) / tr_20) * 100
```


- 21년도 -> 22년도: `36.9%` 증가
```{python}
((tr_22 - tr_21) / tr_21) * 100
```

</br>

***

#### 년도별 ot_total
```{python}
plt.figure(figsize=(10, 6))
sns.barplot(data = ex_df2, x = 'ot_total', y = 'class2', palette = 'viridis')
plt.xlabel('Class2')
plt.ylabel('OT Total')
plt.title('OT Total by Class2')
plt.show()
plt.clf()
```

</br>

- 증감률(%) = (변화량 / 초기값) x 100
```{python}
ot_18 = ex_df2.loc['sum_18', 'ot_total'] #18년도 ot_total
ot_19 = ex_df2.loc['sum_19', 'ot_total'] #19년도 ot_total
ot_20 = ex_df2.loc['sum_20', 'ot_total'] #20년도 ot_total
ot_21 = ex_df2.loc['sum_21', 'ot_total'] #21년도 ot_total
ot_22 = ex_df2.loc['sum_22', 'ot_total'] #22년도 ot_total

```

</br>

- 18년도 -> 19년도: `-22.2%` 감소
```{python}
((ot_19 - ot_18) / ot_18) * 100
```


- 19년도 -> 20년도: `-36.6%` 감소
```{python}
((ot_20 - ot_19) / ot_19) * 100 
```


- 20년도 -> 21년도: `-27.0%` 감소
```{python}
((ot_21 - ot_20) / ot_20) * 100
```


- 21년도 -> 22년도: `2.9%` 증가
```{python}
((ot_22 - ot_21) / ot_21) * 100 
```


---
- 여러분께 드리는 질문

> 왜 ot_total(기타 여행)은 COVID가 지났음에도 회복되지 않을까?

- 우리 조의 결론

> 비대면 문화의 확산 및 유지: 경조금만 보내는 문화, 재택근무, 온라인 미팅 및 수업, 쇼핑 등 

> 추가로 COVID 전과 후로 여행 지출액이 차이나는 것을 알 수 있었습니다.


